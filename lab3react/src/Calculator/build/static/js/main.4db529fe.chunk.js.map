{"version":3,"sources":["Calculator/KeypadComponent.js","reportWebVitals.js","index.js","App.js","Calculator/ResultComponent.js"],"names":["KeyPadComponent","className","name","onClick","e","props","target","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","button","lastClickIsMemory","clearMemory","lastSymbol","wholeExpression","slice","checkIsDigit","state","result","length","checkIsSign","setState","includes","calculateWholeExpression","calculate","reset","reverseSign","getPercentage","getSqrt","showMemory","subtractFromMemory","addToMemory","toPrecision","setError","checkResult","replace","eval","currentResult","RegExp","Math","sqrt","isNaN","percentege","substring","memory","symbol","test","this","ResultComponent"],"mappings":"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","file":"static/js/main.4db529fe.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass KeyPadComponent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='btn_field'>\r\n                <aside className=\"left_block\">\r\n                    <button className='button_narrow' name=\"OFF\" onClick={e => this.props.onClick(e.target.name)}>OFF</button>\r\n                    <button className='button_narrow' name=\"+/-\" onClick={e => this.props.onClick(e.target.name)}>+/-</button>\r\n                    <button className='button_narrow' name=\"sqrt\" onClick={e => this.props.onClick(e.target.name)}>√</button>\r\n\r\n                    <button name=\"MRC\" onClick={e => this.props.onClick(e.target.name)}>MRC</button>\r\n                    <button name=\"M-\" onClick={e => this.props.onClick(e.target.name)}>M-</button>\r\n                    <button name=\"M+\" onClick={e => this.props.onClick(e.target.name)}>M+</button>\r\n\r\n                    <button name=\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\r\n                    <button name=\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\r\n                    <button name=\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\r\n\r\n                    <button name=\"4\" onClick={e => this.props.onClick(e.target.name)}>4</button>\r\n                    <button name=\"5\" onClick={e => this.props.onClick(e.target.name)}>5</button>\r\n                    <button name=\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\r\n\r\n                    <button name=\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\r\n                    <button name=\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\r\n                    <button name=\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\r\n\r\n                    <button name=\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\r\n                    <button name=\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\r\n                    <button name=\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\r\n                </aside>\r\n                <aside className=\"leftblock\">\r\n                    <button className='button_narrow' name=\"%\" onClick={e => this.props.onClick(e.target.name)}>%</button><br />\r\n                    <button name=\"/\" onClick={e => this.props.onClick(e.target.name)}>÷</button><br />\r\n                    <button name=\"*\" onClick={e => this.props.onClick(e.target.name)}>x</button><br />\r\n                    <button name=\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button><br />\r\n                    <button className='button_plus' name=\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button><br />\r\n                </aside>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default KeyPadComponent;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from 'react';\nimport ResultComponent from './Calculator/ResultComponent';\nimport KeyPadComponent from './Calculator/KeypadComponent';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      result: ''\n    }\n    this.wholeExpression = '';\n    this.memory = 0;\n    this.lastClickIsMemory = false;\n    this.clearMemory = false;\n  }\n\n  onClick = button => {\n\n    if (button === 'MRC') {\n      this.lastClickIsMemory === true ? this.clearMemory = true : this.clearMemory = false;\n    }\n    this.lastClickIsMemory === true ? this.lastClickIsMemory = false : this.lastClickIsMemory = true;\n\n    button === 'MRC' ? this.lastClickIsMemory = true : this.lastClickIsMemory = false;\n\n    const lastSymbol = this.wholeExpression.slice(-1);\n    if (this.checkIsDigit(button) || button === '.') {\n\n      if (this.state.result.length + 1 <= 10) {\n        if (!this.checkIsSign(lastSymbol)) {\n          this.setState({\n            result: this.state.result + button,\n          })\n          this.wholeExpression += button;\n        }\n        else {\n          this.setState({\n            result: button,\n          })\n          this.wholeExpression += button;\n        }\n      }\n      else if (this.checkIsSign(lastSymbol)) {\n        this.setState({\n          result: button,\n        })\n        this.wholeExpression += button;\n      }\n    }\n\n    if (this.checkIsSign(button) && this.state.wholeExpression !== '' && !this.checkIsSign(lastSymbol)) {\n\n      if (this.wholeExpression.includes('+') || this.wholeExpression.includes('-') ||\n        this.wholeExpression.includes('/') || this.wholeExpression.includes('*')) {\n        this.calculateWholeExpression();\n      }\n      this.wholeExpression += button;\n      this.setState({\n        result: this.wholeExpression\n      })\n    }\n\n    switch (button) {\n      case '=':\n        this.calculate();\n        break;\n      case 'OFF':\n        this.reset();\n        break;\n      case '+/-':\n        this.reverseSign();\n        break;\n      case '%':\n        this.getPercentage();\n        break;\n      case 'sqrt':\n        this.getSqrt();\n        break;\n      case 'MRC':\n        this.showMemory();\n        break;\n      case 'M-':\n        this.subtractFromMemory();\n        break;\n      case 'M+':\n        this.addToMemory();\n        break;\n      default:\n        break;\n    }\n  };\n\n  calculate = () => {\n    this.calculateWholeExpression();\n    try {\n      if (this.wholeExpression * 1 > 100000000) {\n        this.wholeExpression = (1 * this.wholeExpression).toPrecision(6) + '';\n      }\n      this.setState({\n        result: this.wholeExpression\n      })\n\n    } catch (e) {\n      this.setError();\n    }\n  };\n\n  calculateWholeExpression = () => {\n    let checkResult = '';\n    if (this.wholeExpression.includes('--')) {\n      checkResult = this.wholeExpression.replace('--', '+');\n    }\n    else {\n      checkResult = this.wholeExpression\n    }\n\n    try {\n      this.wholeExpression = (eval(checkResult) || '');\n      this.wholeExpression = (1 * this.wholeExpression).toPrecision(6) + '';\n\n    } catch (e) {\n      this.setError();\n      this.wholeExpression = 'error'\n    }\n  };\n\n  reverseSign = () => {\n    const lastSymbol = this.wholeExpression.slice(-1);\n    if (this.checkIsSign(lastSymbol)) {\n      return;\n    }\n    if (this.wholeExpression === this.state.result) {\n      this.wholeExpression = ((-1) * this.wholeExpression).toPrecision(6) + ''\n      this.setState({\n        result: this.wholeExpression\n      })\n    }\n    else {\n      const currentResult = this.state.result;\n      this.wholeExpression = this.wholeExpression.replace(new RegExp(currentResult + '$'), (-1) * currentResult + '');\n      this.setState({\n        result: (-1) * currentResult + ''\n      })\n    }\n  };\n\n  getSqrt = () => {\n    const lastSymbol = this.wholeExpression.slice(-1);\n    if (this.checkIsSign(lastSymbol)) {\n      this.setError();\n    }\n    if (this.wholeExpression === this.state.result) {\n      this.wholeExpression = Math.sqrt((1 * this.wholeExpression)).toPrecision(6) + ''\n      if (isNaN(this.wholeExpression)) {\n        this.setError();\n        return;\n      }\n      this.setState({\n        result: this.wholeExpression\n      })\n    }\n    else {\n      const currentResult = this.state.result;\n      let sqrt = Math.sqrt((1 * currentResult)).toPrecision(6) + '';\n      if (isNaN(sqrt)) {\n        this.setError();\n        return;\n      }\n      this.wholeExpression = this.wholeExpression.replace(new RegExp(currentResult + '$'), sqrt);\n      this.setState({\n        result: sqrt\n      })\n    }\n  };\n\n  getPercentage = () => {\n    const lastSymbol = this.wholeExpression.slice(-1);\n    if (this.checkIsSign(lastSymbol) || this.wholeExpression === this.state.result ||\n      this.state.result === 'error') {\n      this.setError();\n      return;\n    }\n    const currentResult = this.state.result;\n    const originalNumber = this.wholeExpression.substring(0, this.wholeExpression.length - (currentResult.length + 1));\n    const percentege = (originalNumber * currentResult / 100).toPrecision(6) + '';\n    this.wholeExpression = this.wholeExpression.replace(new RegExp(currentResult + '$'), percentege);\n    this.setState({\n      result: percentege\n    })\n  };\n\n  addToMemory = () => {\n    const lastSymbol = this.wholeExpression.slice(-1);\n    if (this.checkIsSign(lastSymbol) || this.state.result === 'error') {\n      this.setError();\n      return;\n    }\n    this.memory = (1 * this.memory + 1 * this.state.result).toPrecision(6);\n  };\n\n  subtractFromMemory = () => {\n    const lastSymbol = this.wholeExpression.slice(-1);\n    if (this.checkIsSign(lastSymbol) || this.state.result === 'error') {\n      this.setError();\n      return;\n    }\n    this.memory = (1 * this.memory - 1 * this.state.result).toPrecision(6);\n  };\n\n  showMemory = () => {\n    if (this.clearMemory) {\n      this.memory = 0;\n      this.setState({\n        result: '0'\n      })\n      this.wholeExpression = this.memory + ''\n      return;\n    }\n    this.setState({\n      result: this.memory\n    })\n    this.wholeExpression = this.memory + ''\n  };\n\n  reset = () => {\n    this.setState({\n      result: '',\n    })\n    this.wholeExpression = '';\n  };\n\n  setError = () => {\n    this.wholeExpression = ''\n    this.setState({\n      result: 'error'\n    })\n  };\n\n  checkIsDigit = (symbol) => {\n    const digitsPattern = /^\\d+$/;\n    return digitsPattern.test(symbol);\n  };\n\n  checkIsSign = (symbol) => {\n    const signPattern = /^[+,\\-,*,/]$/g;\n    return signPattern.test(symbol);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"calculator-body\">\n          <div className=\"wrapper\">\n            <ResultComponent result={this.state.result} />\n            <div className=\"btn_field\">\n              <KeyPadComponent onClick={this.onClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// MRC кнопка для отображения или стирания (при повторном нажатии) содержимого памяти \n// M+ занести значение в память (если там ничего нет) или добавить то, что на экране к содержимому памяти (результат сложения сохраняется в памяти) \n// M- вычесть то, что на экране, из содержимого памяти (результат вычитания сохраняется в памяти) ","import React, {Component} from 'react';\r\n\r\nclass ResultComponent extends Component {\r\n\r\n\r\n    render() {\r\n        let {result} = this.props;\r\n        return (\r\n            <div className=\"result\">\r\n                <p>{result}</p>\r\n            </div>\r\n    )\r\n        ;\r\n    }\r\n}\r\n\r\n\r\nexport default ResultComponent;"],"sourceRoot":""}